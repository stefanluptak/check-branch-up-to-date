name: "Check the branch is up to date with another one"
description: "Check if branch contains all commits from another branch"
author: Štefan Ľupták
branding:
  icon: check-circle
  color: green
inputs:
  head_branch:
    description: "branch that should include all the commits from the `base_branch`"
    required: false
    default: ${{ github.head_ref }}
  base_branch:
    description: "branch that the `head_branch` should be up-to-date with"
    required: false
    default: ${{ github.base_ref }}
  github_token:
    description: "GitHub token"
    required: false
    default: ${{ github.token }}

outputs:
  up_to_date:
    description: '"true" or "false"'
    value: ${{ steps.check.outputs.up_to_date }}

runs:
  using: "composite"
  steps:
    - shell: bash
      id: check
      run: |
        git fetch

        HEAD_BRANCH="origin/$HEAD_BRANCH"
        BASE_BRANCH="origin/$BASE_BRANCH"
        BASE_BRANCH_HEAD_COMMIT=$(git rev-parse "$BASE_BRANCH")
        HEAD_BRANCH_WITH_BASE_BRANCH=$(git branch -r "$HEAD_BRANCH" --contains "$BASE_BRANCH_HEAD_COMMIT" | wc -l)

        echo "HEAD_BRANCH=$HEAD_BRANCH"
        echo "BASE_BRANCH=$BASE_BRANCH"
        echo "BASE_BRANCH_HEAD_COMMIT=$BASE_BRANCH_HEAD_COMMIT"
        echo "HEAD_BRANCH_WITH_BASE_BRANCH=$HEAD_BRANCH_WITH_BASE_BRANCH"

        if [ $HEAD_BRANCH_WITH_BASE_BRANCH -eq 0 ]; then
          echo "Branch $HEAD_BRANCH is NOT up to date with $BASE_BRANCH"
          echo ::set-output name=up_to_date::false
        else
          echo "Branch $HEAD_BRANCH is up to date with $BASE_BRANCH"
          echo ::set-output name=up_to_date::true
        fi

      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        HEAD_BRANCH: ${{ inputs.head_branch }}
        BASE_BRANCH: ${{ inputs.base_branch }}
